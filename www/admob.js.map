{"version":3,"file":"admob.js","sources":["../node_modules/lodash-es/isUndefined.js","../src/js/utils.js","../src/js/banner.js","../src/js/interstitial.js","../src/js/reward-video.js","../src/js/admob.js"],"sourcesContent":["/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nexport default isUndefined;\n","import corodvaExec from 'cordova/exec'\r\nimport isUndefined from 'lodash/isUndefined'\r\n\r\n/**\r\n * Base config object.\r\n * @typedef {Object} BaseConfig\r\n * @property {string} [id=TESTING_AD_ID] - Ad Unit ID\r\n * @property {boolean} [isTesting=false] - Receiving test ad\r\n * @property {boolean} [autoShow=false] - Auto show ad when loaded\r\n *\r\n * @property {boolean|null} [forChild=null]\r\n * Child-directed setting.\r\n * Default is not calling `tagForChildDirectedTreatment`.\r\n * Set to `true` for `tagForChildDirectedTreatment(true)`.\r\n * Set to `false` for `tagForChildDirectedTreatment(false)`.\r\n * @see https://firebase.google.com/docs/admob/android/targeting#child-directed_setting\r\n *\r\n * @property {boolean|null} [forFamily=null]\r\n * Designed for Families setting.\r\n * Android-only.\r\n * Default is not calling `setIsDesignedForFamilies`.\r\n * Set to `true` for `setIsDesignedForFamilies(true)`.\r\n * Set to `false` for `setIsDesignedForFamilies(false)`.\r\n * @see https://firebase.google.com/docs/admob/android/targeting#designed_for_families_setting\r\n *\r\n * @property {Array<number>|null} [location=null]\r\n * Location targeting.\r\n * It accept an array in the form of `[latitude, longitude]`.\r\n * Android-only.\r\n * Default is not calling `setLatitude` and `setLongitude`.\r\n */\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport function exec(method, args) {\r\n  return new Promise((resolve, reject) => {\r\n    corodvaExec(resolve, reject, 'AdMob', method, args)\r\n  })\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport function isFunction(x) {\r\n  return typeof x === 'function'\r\n}\r\n\r\nfunction isString(x) {\r\n  return typeof x === 'string'\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport function wrapCallbacks(p, successCallback, failureCallback) {\r\n  if (isFunction(successCallback)) {\r\n    p = p.then(successCallback) // eslint-disable-line no-param-reassign\r\n  }\r\n  if (isFunction(failureCallback)) {\r\n    p = p.catch(failureCallback) // eslint-disable-line no-param-reassign\r\n  }\r\n  return p\r\n}\r\n\r\nfunction boolean2string(x) {\r\n  if (x === null) {\r\n    return ''\r\n  }\r\n  if (x === true) {\r\n    return 'yes'\r\n  }\r\n  if (x === false) {\r\n    return 'no'\r\n  }\r\n  return x\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport function translateOptions(options) {\r\n  /* eslint-disable no-console */\r\n  const opts = {}\r\n  if (!isUndefined(options.forChild)) {\r\n    opts.forChild = boolean2string(options.forChild)\r\n    if (isString(options.forChild)) {\r\n      console.warn(\r\n        '`forChild` will not accept string in future, pass boolean instead',\r\n      )\r\n    }\r\n  }\r\n  if (!isUndefined(options.forFamily)) {\r\n    opts.forFamily = boolean2string(options.forFamily)\r\n    if (isString(options.forFamily)) {\r\n      console.warn(\r\n        '`forFamily` will not accept string in future, pass boolean instead',\r\n      )\r\n    }\r\n  }\r\n  /* eslint-enable no-console */\r\n  return {\r\n    ...options,\r\n    ...opts,\r\n    // TODO update native implementation using `size`\r\n    adSize: options.size,\r\n  }\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport function buildEvents(adType, eventKeys) {\r\n  return eventKeys.reduce((acc, eventKey) => {\r\n    acc[eventKey] = `admob.${adType}.events.${eventKey}`\r\n    return acc\r\n  }, {})\r\n}\r\n","import { buildEvents, exec, translateOptions } from './utils'\r\n\r\n/**\r\n * Banner config object.\r\n * @typedef {BaseConfig} BannerConfig\r\n * @property {boolean} [bannerAtTop=false] - set to true, to put banner at top\r\n * @property {boolean} [overlap=true] -\r\n * set to true, to allow banner overlap webview\r\n * @property {boolean} [offsetTopBar=false] -\r\n * set to true to avoid ios7 status bar overlap\r\n * @property {string} [size=SMART_BANNER] - {@link BANNER_SIZE}\r\n */\r\n\r\nconst events = buildEvents('banner', [\r\n  'LOAD',\r\n  'LOAD_FAIL',\r\n  'OPEN',\r\n  'CLOSE',\r\n  'EXIT_APP',\r\n])\r\n\r\n/**\r\n * @typedef {Object} BANNER_SIZE\r\n * @property {string} BANNER - BANNER\r\n * @property {string} IAB_BANNER - IAB_BANNER\r\n * @property {string} IAB_LEADERBOARD - IAB_LEADERBOARD\r\n * @property {string} IAB_MRECT - IAB_MRECT\r\n * @property {string} LARGE_BANNER - LARGE_BANNER\r\n * @property {string} SMART_BANNER - SMART_BANNER\r\n * @property {string} FLUID - FLUID\r\n */\r\n/**\r\n * @constant\r\n * @type {Object}\r\n */\r\nconst sizes = {\r\n  BANNER: 'BANNER',\r\n  IAB_BANNER: 'IAB_BANNER',\r\n  IAB_LEADERBOARD: 'IAB_LEADERBOARD',\r\n  IAB_MRECT: 'IAB_MRECT',\r\n  LARGE_BANNER: 'LARGE_BANNER',\r\n  SMART_BANNER: 'SMART_BANNER',\r\n  FLUID: 'FLUID',\r\n  // android-only\r\n  FULL_BANNER: 'FULL_BANNER',\r\n  LEADERBOARD: 'LEADERBOARD',\r\n  MEDIUM_RECTANGLE: 'MEDIUM_RECTANGLE',\r\n  SEARCH: 'SEARCH',\r\n  WIDE_SKYSCRAPER: 'WIDE_SKYSCRAPER',\r\n}\r\n\r\n/**\r\n * @protected\r\n * @desc\r\n * See usage in {@link banner}.\r\n */\r\nclass Banner {\r\n  static events = events\r\n\r\n  /**\r\n   * Banner sizes\r\n   * @type {BANNER_SIZE}\r\n   */\r\n  static sizes = sizes\r\n\r\n  /**\r\n   * @protected\r\n   * @param {BannerConfig} opts - Initial config.\r\n   */\r\n  constructor(opts) {\r\n    this.config({\r\n      size: sizes.SMART_BANNER,\r\n      ...opts,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Update config.\r\n   *\r\n   * @param {BannerConfig} opts - New config.\r\n   * @returns {BannerConfig} Updated config.\r\n   */\r\n  config(opts) {\r\n    this._config = {\r\n      ...this._config,\r\n      ...opts,\r\n    }\r\n    return this._config\r\n  }\r\n\r\n  /**\r\n   * Create banner.\r\n   *\r\n   * @returns {Promise} Excutaion result promise.\r\n   */\r\n  prepare() {\r\n    const options = {\r\n      publisherId: this._config.id,\r\n      ...this._config,\r\n    }\r\n    delete options.id\r\n    return exec('createBannerView', [translateOptions(options)])\r\n  }\r\n\r\n  /**\r\n   * Show the banner.\r\n   *\r\n   * @returns {Promise} Excutaion result promise.\r\n   */\r\n  show() {\r\n    return exec('showAd', [true])\r\n  }\r\n\r\n  /**\r\n   * Hide the banner.\r\n   *\r\n   * @returns {Promise} Excutaion result promise.\r\n   */\r\n  hide() {\r\n    return exec('showAd', [false])\r\n  }\r\n\r\n  /**\r\n   * Remove the banner.\r\n   *\r\n   * @returns {Promise} Excutaion result promise.\r\n   */\r\n  remove() {\r\n    return exec('destroyBannerView', [])\r\n  }\r\n}\r\n\r\nexport { Banner }\r\n","import { buildEvents, exec, translateOptions } from './utils'\r\n\r\n/**\r\n * Interstitial config object.\r\n * @typedef {BaseConfig} InterstitialConfig\r\n */\r\n\r\nconst events = buildEvents('interstitial', [\r\n  'LOAD',\r\n  'LOAD_FAIL',\r\n  'OPEN',\r\n  'CLOSE',\r\n  'EXIT_APP',\r\n])\r\n\r\n/**\r\n * @protected\r\n * @desc\r\n * See usage in {@link interstitial}.\r\n */\r\nclass Interstitial {\r\n  static events = events\r\n\r\n  /**\r\n   * @protected\r\n   * @param {InterstitialConfig} opts - Initial config.\r\n   */\r\n  constructor(opts) {\r\n    this.config({\r\n      ...opts,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Update config.\r\n   *\r\n   * @param {InterstitialConfig} opts - New config.\r\n   * @returns {InterstitialConfig} Updated config.\r\n   */\r\n  config(opts) {\r\n    this._config = {\r\n      ...this._config,\r\n      ...opts,\r\n    }\r\n    return this._config\r\n  }\r\n\r\n  /**\r\n   * @returns {Promise} Excutaion result promise.\r\n   */\r\n  prepare() {\r\n    const options = {\r\n      interstitialAdId: this._config.id,\r\n      ...this._config,\r\n    }\r\n    delete options.id\r\n    return exec('prepareInterstitial', [translateOptions(options)])\r\n  }\r\n\r\n  /**\r\n   * @returns {Promise} Excutaion result promise.\r\n   */\r\n  show() {\r\n    return exec('showInterstitialAd', [true])\r\n  }\r\n\r\n  /**\r\n   * @returns {Promise} Excutaion result promise.\r\n   */\r\n  isReady() {\r\n    return exec('isInterstitialReady', [])\r\n  }\r\n}\r\n\r\nexport { Interstitial }\r\n","import { buildEvents, exec, translateOptions } from './utils'\r\n\r\n/**\r\n * Reward Video config object.\r\n * @typedef {BaseConfig} RewardVideoConfig\r\n */\r\n\r\nconst events = buildEvents('rewardvideo', [\r\n  'LOAD',\r\n  'LOAD_FAIL',\r\n  'OPEN',\r\n  'CLOSE',\r\n  'EXIT_APP',\r\n  'START',\r\n  'REWARD',\r\n])\r\n\r\n/**\r\n * See usage in {@link rewardvideo}.\r\n * @protected\r\n */\r\nclass RewardVideo {\r\n  static events = events\r\n\r\n  /**\r\n   * @protected\r\n   * @param {RewardVideoConfig} opts - Initial config.\r\n   */\r\n  constructor(opts) {\r\n    this.config({\r\n      ...opts,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Update config.\r\n   *\r\n   * @param {RewardVideoConfig} opts - New config.\r\n   * @returns {RewardVideoConfig} Updated config.\r\n   */\r\n  config(opts) {\r\n    this._config = {\r\n      ...this._config,\r\n      ...opts,\r\n    }\r\n    return this._config\r\n  }\r\n\r\n  /**\r\n   * @returns {Promise} Excutaion result promise.\r\n   */\r\n  prepare() {\r\n    const options = {\r\n      rewardVideoId: this._config.id,\r\n      ...this._config,\r\n    }\r\n    delete options.id\r\n    return exec('createRewardVideo', [translateOptions(options)])\r\n  }\r\n\r\n  /**\r\n   * @returns {Promise} Excutaion result promise.\r\n   */\r\n  show() {\r\n    return exec('showRewardVideo', [true])\r\n  }\r\n\r\n  /**\r\n   * @returns {Promise} Excutaion result promise.\r\n   */\r\n  isReady() {\r\n    return exec('isRewardVideoReady', [])\r\n  }\r\n}\r\n\r\nexport { RewardVideo }\r\n","import exec from 'cordova/exec'\r\n\r\nimport { wrapCallbacks, translateOptions } from './utils'\r\n\r\nimport { Banner } from './banner'\r\nimport { Interstitial } from './interstitial'\r\nimport { RewardVideo } from './reward-video'\r\n\r\n/**\r\n * @type {Banner}\r\n * @since 0.6\r\n * @emits {admob.banner.events.LOAD}\r\n * @emits {admob.banner.events.LOAD_FAIL}\r\n * @emits {admob.banner.events.OPEN}\r\n * @emits {admob.banner.events.CLOSE}\r\n * @emits {admob.banner.events.EXIT_APP}\r\n * @example\r\n * admob.banner.config({\r\n *  id: 'ca-app-pub-xxx/xxx',\r\n * })\r\n *\r\n * // Create banner\r\n * admob.banner.prepare()\r\n *\r\n * // Show the banner\r\n * admob.banner.show()\r\n *\r\n * // Hide the banner\r\n * admob.banner.hide()\r\n *\r\n * // Remove the banner\r\n * admob.banner.remove()\r\n */\r\nexport const banner = new Banner()\r\n\r\n/**\r\n * @type {Interstitial}\r\n * @since 0.6\r\n * @emits {admob.interstitial.events.LOAD}\r\n * @emits {admob.interstitial.events.LOAD_FAIL}\r\n * @emits {admob.interstitial.events.OPEN}\r\n * @emits {admob.interstitial.events.CLOSE}\r\n * @emits {admob.interstitial.events.EXIT_APP}\r\n * @example\r\n * admob.interstitial.config({\r\n *  id: 'ca-app-pub-xxx/xxx',\r\n * })\r\n *\r\n * admob.interstitial.prepare()\r\n *\r\n * admob.interstitial.show()\r\n */\r\nexport const interstitial = new Interstitial()\r\n\r\n/**\r\n * @external {cordova-admob-mediation} https://github.com/rehy/cordova-admob-mediation\r\n */\r\n/**\r\n * Reward video requires mediation SDK to be installed,\r\n * see {@link cordova-admob-mediation} for list of supported networks.\r\n * @type {RewardVideo}\r\n * @since 0.6\r\n * @emits {admob.rewardvideo.events.LOAD}\r\n * @emits {admob.rewardvideo.events.LOAD_FAIL}\r\n * @emits {admob.rewardvideo.events.OPEN}\r\n * @emits {admob.rewardvideo.events.CLOSE}\r\n * @emits {admob.rewardvideo.events.EXIT_APP}\r\n * @emits {admob.rewardvideo.events.START}\r\n * @emits {admob.rewardvideo.events.REWARD}\r\n * @example\r\n * admob.rewardvideo.config({\r\n *  id: 'ca-app-pub-xxx/xxx',\r\n * })\r\n *\r\n * admob.rewardvideo.prepare()\r\n *\r\n * admob.rewardvideo.show()\r\n */\r\nexport const rewardvideo = new RewardVideo()\r\n\r\n// Old APIs\r\n\r\n/**\r\n * Set options.\r\n *\r\n * @deprecated since version 0.6\r\n * @param {Object} options\r\n * @param {string} options.publisherId\r\n * @param {string} options.interstitialAdId\r\n *\r\n * @param {boolean} [options.bannerAtTop=false]\r\n * Set to true, to put banner at top.\r\n * @param {boolean} [options.overlap=true]\r\n * Set to true, to allow banner overlap webview.\r\n * @param {boolean} [options.offsetTopBar=false]\r\n * Set to true to avoid ios7 status bar overlap.\r\n * @param {boolean} [options.isTesting=false]    Receiving test ad.\r\n * @param {boolean} [options.autoShow=false]\r\n * Auto show interstitial ad when loaded.\r\n *\r\n * @param {boolean|null} [options.forChild=null]\r\n * Default is not calling `tagForChildDirectedTreatment`.\r\n * Set to \"true\" for `tagForChildDirectedTreatment(true)`.\r\n * Set to \"false\" for `tagForChildDirectedTreatment(false)`.\r\n *\r\n * @param {boolean|null} [options.forFamily=null]\r\n * Android-only.\r\n * Default is not calling `setIsDesignedForFamilies`.\r\n * Set to \"true\" for `setIsDesignedForFamilies(true)`.\r\n * Set to \"false\" for `setIsDesignedForFamilies(false)`.\r\n *\r\n * @param {function()} [successCallback]\r\n * @param {function()} [failureCallback]\r\n */\r\nexport function setOptions(options, successCallback, failureCallback) {\r\n  if (typeof options === 'object') {\r\n    Object.keys(options).forEach(k => {\r\n      switch (k) {\r\n        case 'publisherId':\r\n          banner._config.id = options[k]\r\n          break\r\n        case 'bannerAtTop':\r\n        case 'overlap':\r\n        case 'offsetTopBar':\r\n          banner._config[k] = options[k]\r\n          break\r\n        case 'interstitialAdId':\r\n          interstitial._config.id = options[k]\r\n          break\r\n        case 'rewardVideoId':\r\n          rewardvideo._config.id = options[k]\r\n          break\r\n        case 'isTesting':\r\n        case 'autoShow':\r\n          banner._config[k] = options[k]\r\n          interstitial._config[k] = options[k]\r\n          rewardvideo._config[k] = options[k]\r\n          break\r\n        default:\r\n      }\r\n    })\r\n    exec(successCallback, failureCallback, 'AdMob', 'setOptions', [\r\n      translateOptions(options),\r\n    ])\r\n  } else if (typeof failureCallback === 'function') {\r\n    failureCallback('options should be specified.')\r\n  }\r\n}\r\n\r\n/**\r\n * Ad sizes.\r\n * @constant\r\n * @type {BANNER_SIZE}\r\n * @deprecated since version 0.6\r\n */\r\nexport const AD_SIZE = Banner.sizes\r\n\r\n/* eslint-disable no-console */\r\n/**\r\n * @deprecated since version 0.6\r\n */\r\nexport function createBannerView(\r\n  options = {},\r\n  successCallback,\r\n  failureCallback,\r\n) {\r\n  console.warn('Use admob.banner.prepare() instead.')\r\n  exec(successCallback, failureCallback, 'AdMob', 'createBannerView', [\r\n    translateOptions(options),\r\n  ])\r\n}\r\n\r\n/**\r\n * @deprecated since version 0.6\r\n */\r\nexport function destroyBannerView(options, successCallback, failureCallback) {\r\n  console.warn('Use admob.banner.remove() instead.')\r\n  exec(successCallback, failureCallback, 'AdMob', 'destroyBannerView', [])\r\n}\r\n\r\n/**\r\n * @deprecated since version 0.6\r\n */\r\nexport function showAd(show = true, successCallback, failureCallback) {\r\n  console.warn('Use admob.banner.show() and admob.banner.hide() instead.')\r\n  exec(successCallback, failureCallback, 'AdMob', 'showAd', [show])\r\n}\r\n\r\n/**\r\n * @deprecated since version 0.6\r\n */\r\nexport function createInterstitialView(\r\n  options,\r\n  successCallback,\r\n  failureCallback,\r\n) {\r\n  console.warn(\r\n    'Use admob.interstitial.prepare() instead, it will do both createInterstitialView() and requestInterstitialAd().',\r\n  )\r\n  exec(successCallback, failureCallback, 'AdMob', 'createInterstitialView', [\r\n    translateOptions(options),\r\n  ])\r\n}\r\n\r\n/**\r\n * @deprecated since version 0.6\r\n */\r\nexport function requestInterstitialAd(\r\n  options = {},\r\n  successCallback,\r\n  failureCallback,\r\n) {\r\n  console.warn(\r\n    'Use admob.interstitial.prepare() instead, it will do both createInterstitialView() and requestInterstitialAd().',\r\n  )\r\n  exec(successCallback, failureCallback, 'AdMob', 'requestInterstitialAd', [\r\n    translateOptions(options),\r\n  ])\r\n}\r\n\r\n/**\r\n * @deprecated since version 0.6\r\n */\r\nexport function prepareInterstitial(\r\n  options = {},\r\n  successCallback,\r\n  failureCallback,\r\n) {\r\n  console.warn('Use admob.interstitial.prepare() instead.')\r\n  exec(successCallback, failureCallback, 'AdMob', 'prepareInterstitial', [\r\n    translateOptions(options),\r\n  ])\r\n}\r\n\r\n/**\r\n * @deprecated since version 0.6\r\n */\r\nexport function showInterstitial(successCallback, failureCallback) {\r\n  console.warn('Use admob.interstitial.show() instead.')\r\n  wrapCallbacks(interstitial.show(), successCallback, failureCallback)\r\n}\r\n\r\n/**\r\n * @deprecated since version 0.6\r\n */\r\nexport function showInterstitialAd(\r\n  show = true,\r\n  successCallback,\r\n  failureCallback,\r\n) {\r\n  console.warn('Use admob.interstitial.show() instead.')\r\n  exec(successCallback, failureCallback, 'AdMob', 'showInterstitialAd', [show])\r\n}\r\n/* eslint-enable no-console */\r\n"],"names":["isUndefined","value","undefined","exec","method","args","Promise","resolve","reject","isFunction","x","isString","wrapCallbacks","p","successCallback","failureCallback","then","boolean2string","translateOptions","options","opts","forChild","warn","forFamily","size","buildEvents","adType","eventKeys","reduce","acc","eventKey","events","sizes","Banner","config","SMART_BANNER","_config","this","id","Interstitial","RewardVideo","banner","interstitial","rewardvideo","setOptions","keys","forEach","k","AD_SIZE","createBannerView","destroyBannerView","showAd","show","createInterstitialView","requestInterstitialAd","prepareInterstitial","showInterstitial","showInterstitialAd"],"mappings":"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"}